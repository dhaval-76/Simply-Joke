{"version":3,"sources":["store/jokes.js","components/Card.js","components/Checkbox.js","components/Home.js","components/Header.js","components/Favorites.js","components/App.js","store/index.js","serviceWorker.js","index.js"],"names":["jokesSlice","createSlice","name","initialState","jokeArray","flags","categories","reducers","addJokes","state","jokesArray","payload","toggleFavorite","id","map","item","isFav","getMoreJokes","getMetaData","toggleCheckbox","value","find","isSelected","actions","jokeSelector","clearMetaData","jokes","metaDataSelector","fetchData","dispatch","a","axios","get","response","data","category","joke","console","log","fetchMetaData","reduce","acc","curr","push","Card","useDispatch","className","onClick","style","cursor","color","size","Checkbox","label","onCheckboxChange","type","checked","onChange","Home","jokesData","useSelector","metaData","handleCheckboxChange","e","target","createCheckbox","onSubmit","preventDefault","getMoreJokesHandler","join","onReset","Header","pathname","useLocation","to","Favorites","filter","length","App","useEffect","basename","process","path","exact","component","store","configureStore","reducer","jokesReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fed78600.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  jokeArray: [],\n  flags: [],\n  categories: [],\n};\n\nexport const jokesSlice = createSlice({\n  name: \"jokes\",\n  initialState,\n  reducers: {\n    addJokes: (state, { payload: jokesArray }) => {\n      state.jokeArray = jokesArray;\n    },\n    toggleFavorite: (state, { payload: id }) => {\n      state.jokeArray = state.jokeArray.map((item) => {\n        if (item.id !== id) return item;\n        return {\n          ...item,\n          isFav: !item.isFav,\n        };\n      });\n    },\n    getMoreJokes: (state, { payload: jokesArray }) => {\n      state.jokeArray = jokesArray;\n    },\n    getMetaData: (state, { payload }) => {\n      state.categories = payload.categories;\n      state.flags = payload.flags;\n    },\n    toggleCheckbox: (state, { payload: value }) => {\n      if (state.categories.find((item) => item.value === value)) {\n        state.categories = state.categories.map((item) => {\n          if (item.value !== value) return item;\n          return {\n            ...item,\n            isSelected: !item.isSelected,\n          };\n        });\n      } else {\n        state.flags = state.flags.map((item) => {\n          if (item.value !== value) return item;\n          return {\n            ...item,\n            isSelected: !item.isSelected,\n          };\n        });\n      }\n    },\n  },\n});\n\nexport const {\n  addJokes,\n  toggleFavorite,\n  getMoreJokes,\n  getMetaData,\n  toggleCheckbox,\n  clearMetaData,\n} = jokesSlice.actions;\n\nexport const jokeSelector = (state) => state.jokes.jokeArray;\n\nexport const metaDataSelector = (state) => ({\n  flags: state.jokes.flags,\n  categories: state.jokes.categories,\n});\n\nexport default jokesSlice.reducer;\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(\n        \"https://v2.jokeapi.dev/joke/Any?type=single&amount=10\"\n      );\n      const jokes = response.data.jokes.map((item) => ({\n        id: item.id,\n        category: item.category,\n        joke: item.joke,\n        isFav: false,\n      }));\n\n      dispatch(addJokes(jokes));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const getMoreJokesHandler = (categories, flags) => {\n  return async (dispatch) => {\n    try {\n      let response;\n      if (categories && !flags) {\n        response = await axios.get(\n          \"https://v2.jokeapi.dev/joke/\" + categories + \"?type=single&amount=10\"\n        );\n      } else if (categories && flags) {\n        response = await axios.get(\n          \"https://v2.jokeapi.dev/joke/\" +\n            categories +\n            \"?blacklistFlags=\" +\n            flags +\n            \"&type=single&amount=10\"\n        );\n      }\n      const jokes = response.data.jokes.map((item) => ({\n        id: item.id,\n        category: item.category,\n        joke: item.joke,\n        isFav: false,\n      }));\n      dispatch(getMoreJokes(jokes));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchMetaData = () => {\n  return async (dispatch) => {\n    try {\n      let categories = await axios.get(\n        \"https://sv443.net/jokeapi/v2/categories\"\n      );\n      let flags = await axios.get(\"https://sv443.net/jokeapi/v2/flags\");\n\n      categories = categories.data.categories.reduce((acc, curr) => {\n        if (curr !== \"Any\") {\n          acc.push({\n            value: curr,\n            isSelected: true,\n          });\n        }\n        return acc;\n      }, []);\n\n      flags = flags.data.flags.map((item) => ({\n        value: item,\n        isSelected: false,\n      }));\n      dispatch(getMetaData({ categories, flags }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","import { MdFavorite } from \"react-icons/md\";\r\nimport { MdFavoriteBorder } from \"react-icons/md\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"../css/Card.css\";\r\nimport { toggleFavorite } from \"../store/jokes\";\r\n\r\nfunction Card({ item }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card__header\">\r\n        <h3>{item.category}</h3>\r\n        {item.isFav ? (\r\n          <MdFavorite\r\n            onClick={() => dispatch(toggleFavorite(item.id))}\r\n            style={{ cursor: \"pointer\" }}\r\n            color=\"red\"\r\n            size=\"22\"\r\n          />\r\n        ) : (\r\n          <MdFavoriteBorder\r\n            onClick={() => dispatch(toggleFavorite(item.id))}\r\n            style={{ cursor: \"pointer\" }}\r\n            color=\"red\"\r\n            size=\"22\"\r\n          />\r\n        )}\r\n      </div>\r\n      <p>{item.joke}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","const Checkbox = ({ label, isSelected, onCheckboxChange }) => (\r\n    <label className=\"form__check\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name={label}\r\n        checked={isSelected}\r\n        onChange={onCheckboxChange}\r\n        className=\"form__checkInput\"\r\n      />\r\n      {label}\r\n    </label>\r\n);\r\n\r\nexport default Checkbox;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../css/Home.css\";\r\nimport {\r\n  fetchData,\r\n  fetchMetaData,\r\n  getMoreJokesHandler,\r\n  jokeSelector,\r\n  metaDataSelector,\r\n  toggleCheckbox,\r\n} from \"../store/jokes\";\r\nimport Card from \"./Card\";\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nfunction Home() {\r\n  const jokesData = useSelector(jokeSelector);\r\n  const metaData = useSelector(metaDataSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name } = e.target;\r\n    dispatch(toggleCheckbox(name));\r\n  };\r\n\r\n  const createCheckbox = (item) => (\r\n    <Checkbox\r\n      key={item.value}\r\n      label={item.value}\r\n      isSelected={item.isSelected}\r\n      onCheckboxChange={handleCheckboxChange}\r\n    />\r\n  );\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const categories = metaData.categories.reduce((acc, curr) => {\r\n      if (curr.isSelected) {\r\n        acc.push(curr.value);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    const flags = metaData.flags.reduce((acc, curr) => {\r\n      if (curr.isSelected) {\r\n        acc.push(curr.value);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    dispatch(getMoreJokesHandler(categories.join(), flags.join()));\r\n  };\r\n\r\n  const onRefresh = () => {\r\n    dispatch(fetchData());\r\n    dispatch(fetchMetaData());\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__header\">\r\n        <h2>Add more jokes</h2>\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={onSubmit}\r\n          onReset={() => dispatch(fetchMetaData())}\r\n        >\r\n          <div className=\"form__section\">\r\n            <h3>Select Categories:</h3>\r\n            <div className=\"form__input\">\r\n              {metaData.categories.map(createCheckbox)}\r\n            </div>\r\n          </div>\r\n          <div className=\"form__section\">\r\n            <h3>Select flags to blacklist:</h3>\r\n            <div className=\"form__input\">\r\n              {metaData.flags.map(createCheckbox)}\r\n            </div>\r\n          </div>\r\n          <div className=\"form__btn\">\r\n            <button type=\"submit\">Get Jokes</button>\r\n            <button type=\"reset\">Reset to Default</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"home__title\">\r\n        <h1>Jokes</h1>\r\n        <button onClick={onRefresh}>Refresh</button>\r\n      </div>\r\n      <div className=\"home__grid\">\r\n        {jokesData.map((item) => (\r\n          <Card key={item.id} item={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport \"../css/Header.css\";\r\n\r\nfunction Header() {\r\n  const { pathname } = useLocation()\r\n  return (\r\n    <div className=\"header\">\r\n    <Link to=\"/\" className={\"header__item \" + (pathname===\"/\" ? \"active\" : \"\")}>Home</Link>\r\n    <Link to=\"/favorites\" className={\"header__item \" + (pathname===\"/favorites\" ? \"active\" : \"\")}>Favorites</Link>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import { useSelector } from \"react-redux\";\r\nimport \"../css/Favorites.css\";\r\nimport { jokeSelector } from \"../store/jokes\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Favorites() {\r\n  const data = useSelector(jokeSelector);\r\n\r\n  return (\r\n    <div className=\"favorites\">\r\n      {data.filter((item) => item.isFav).length > 0 ? (\r\n        <div className=\"favorite__grid\">\r\n          {data.reduce((acc, curr) => {\r\n            if (curr.isFav) {\r\n              acc.push(<Card key={curr.id} item={curr} />);\r\n            }\r\n            return acc;\r\n          }, [])}\r\n        </div>\r\n      ) : (\r\n        <h1>No Jokes added in Favorites</h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favorites;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"../css/App.css\";\nimport Home from \"./Home\";\nimport Header from \"./Header\";\nimport Favorites from \"./Favorites\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchData, fetchMetaData } from \"../store/jokes\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchData());\n    dispatch(fetchMetaData());\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/favorites\" component={Favorites} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport jokesReducer from './jokes';\n\nexport const store = configureStore({\n  reducer: {\n    jokes: jokesReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}